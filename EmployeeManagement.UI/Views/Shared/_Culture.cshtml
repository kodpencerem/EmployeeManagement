@using System.Globalization
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@inject Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Builder.RequestLocalizationOptions> locOptions


@{
    var culture = Context.Features.Get<Microsoft.AspNetCore.Localization.IRequestCultureFeature>();

    var returnUrl = string.IsNullOrWhiteSpace(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";

    var culturList = locOptions.Value.SupportedUICultures.Select(x => new SelectListItem
    {
        Value = x.Name , Text = localizer.GetString(x.DisplayName)
    }).ToList();

}


<div>
    <form asp-action="CultureManagement" asp-controller="Home" method="post" asp-route-returnUrl ="@returnUrl">
        <select name="culture" asp-for="@culture.RequestCulture.UICulture.Name" asp-items="culturList" onchange="this.form.submit()">

        </select>
    </form>
</div>
